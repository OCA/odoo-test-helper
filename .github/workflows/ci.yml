name: CI

on:
  pull_request:
  push:
    branches:
      - "master"
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

jobs:
  pre-commit:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - uses: pre-commit/action@v3.0.1

  tests:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        include:
          # - python-version: "3.6"
          #   toxenv: "py36-14.0"
          # - python-version: "3.6"
          #   toxenv: "py36-15.0"
          # - python-version: "3.8"
          #   toxenv: "py38-15.0"
          # - python-version: "3.9"
          #   toxenv: "py38-16.0"
          # - python-version: "3.10"
          #   toxenv: "py38-17.0"
          - python-version: "3.10"
            toxenv: "py310-16.0"
          - python-version: "3.10"
            toxenv: "twine_check"

    services:
      postgres:
        image: postgres:12.0
        env:
          POSTGRES_USER: odoo
          POSTGRES_PASSWORD: odoo
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options:
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s
          --health-retries 5

    env:
      PGHOST: localhost
      PGPORT: 5432
      PGUSER: odoo
      PGPASSWORD: odoo

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.python-version }}"
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.toxenv }}
      - name: Install system dependencies
        run: |
          sudo apt-get install -qq --no-install-recommends \
            libxml2-dev libxslt1-dev \
            libldap2-dev libsasl2-dev \
            gettext
          pip install tox virtualenv
      - name: Run tox
        run: tox -e ${{ matrix.toxenv }}
      - uses: codecov/codecov-action@v1

  deploy:
    runs-on: ubuntu-latest
    needs:
      - pre-commit
      # - tests TODO
    if: startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
      - name: Install pypa/build
        run: python -m pip install build
      - name: Build a binary wheel and a source tarball
        run: python -m build --sdist --wheel --outdir dist/
      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_token }}
